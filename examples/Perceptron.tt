module Perceptron where

import Lists
import Reals

Ind : Type
Ind = primitive "#Ind"

kappa : [w : List Real;
         t : Real;
         c : List Real -> Class]
kappa = (w = w, t = t, c = c)
  where w : List Real
        w = cons 0.800 (cons 0.010 nil)
        t : Real
        t = 0.090
        f : (v : List Real) -> Dec (Positive (subtract t (dotProd w v)))
        f v = decidePositivity (subtract t (dotProd w v))
        c : (v : List Real) -> Class
        c v = decToClass (Positive (subtract t (dotProd w v))) (f v)
