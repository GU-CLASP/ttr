module
open import Booleans

When : Bool -> Type -> Type
When tag a = if Type tag a []

Maybe : Type -> Type
Maybe a =  [ tag : Bool
           ; content : When tag a]

Just : Type -> Type
Just a = [ tag : True ; content : a]

just : (a : Type) -> a -> Just a
just _ x = ( tag = true, content = x)

nothing : (a : Type) -> Maybe a
nothing _ = (tag = false, content = ())

checkJustSubtype : (a : Type) -> Just a -> Maybe a
checkJustSubtype a x = x


-- mapMaybe : (A B : Type) -> (A -> B) -> Maybe A -> Maybe B
-- mapMaybe A B f = split
--   nothing _ -> 'nothing ()
--   yes x -> 'yes (f x)
